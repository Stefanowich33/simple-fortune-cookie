name: deployment
on: 
  workflow_dispatch:
  push:
    branches:
      - "trunk"
  release:
    types: [prereleased, released]
    tags:
      - "v*"

jobs:
  build-and-push-frontend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/simple-fortune-cookie/cookie-frontend
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: frontend
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-and-push-backend-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/simple-fortune-cookie/cookie-backend
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: backend
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy-development-environment:
    needs: [build-and-push-backend-image, build-and-push-frontend-image]
    runs-on: [self-hosted, development]
    steps:
      - uses: actions/checkout@v3
      - name: change image tag to branch name
        run: sed -i 's/<replaceme>/${{ github.ref_name }}/g' ./manifests/generated/*-deployment.yaml
      - run: kubectl apply -f ./manifests/generated/redis-deployment.yaml && kubectl apply -f ./manifests/generated/redis-service.yaml && sleep 10
      - run: kubectl apply -f ./manifests/generated
      - run: chmod +x ci/health-check.sh
      - run: ci/health-check.sh
  deploy-staging-environment:
    if: github.event_name == 'release'
    needs: [deploy-development-environment]
    runs-on: [self-hosted, staging]
    steps:
      - uses: actions/checkout@v3
      - name: change image tag to version name
        run: sed -i 's/<replaceme>/${{ github.ref_name }}/g' ./manifests/generated/*-deployment.yaml
      - run: kubectl apply -f ./manifests/generated/redis-deployment.yaml && kubectl apply -f ./manifests/generated/redis-service.yaml && sleep 10
      - run: kubectl apply -f ./manifests/generated
      - run: chmod +x ci/health-check.sh
      - run: ci/health-check.sh
  deploy-production-environment:
    if: github.event_name == 'release' && !github.event.release.prerelease
    needs: [deploy-staging-environment]
    runs-on: [self-hosted, production]
    steps:
      - uses: actions/checkout@v3
      - name: change image tag to version name
        run: sed -i 's/<replaceme>/${{ github.ref_name }}/g' ./manifests/generated/*-deployment.yaml
      - run: kubectl apply -f ./manifests/generated/redis-deployment.yaml && kubectl apply -f ./manifests/generated/redis-service.yaml && sleep 10
      - run: kubectl apply -f ./manifests/generated
      - run: chmod +x ci/health-check.sh
      - run: ci/health-check.sh
